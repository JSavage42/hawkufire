{"version":3,"sources":["serviceWorker.js","constants/routes.js","components/Session/context.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Home/index.js","components/SignOut/index.js","components/Navigation/index.js","components/PasswordForget/index.js","components/SignUp/index.js","components/SignIn/index.js","components/Competitions/AddCompetition.js","components/Competitions/CompetitionDetails.js","components/Competitions/CompetitionList.js","components/Competitions/EditCompetition.js","components/Teams/AddTeam.js","components/Teams/TeamDetails.js","components/Teams/TeamList.js","components/Teams/EditTeam.js","components/Anomalies/AddAnomaly.js","components/Anomalies/AnomalyDetails.js","components/Anomalies/AnomalyList.js","components/Anomalies/EditAnomaly.js","components/Competitors/AddCompetitor.js","components/Competitors/CompetitorDetails.js","components/Competitors/CompetitorList.js","components/Competitors/EditCompetitor.js","components/Reports/AddReport.js","components/Reports/ReportDetails.js","components/Reports/ReportList.js","components/Reports/EditReport.js","components/App/index.js","index.js"],"names":["Boolean","window","location","hostname","match","HOME","AuthUserContext","React","createContext","FirebaseContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignInWithGoogle","signInWithPopup","googleProvider","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doSendEmailVerification","currentUser","sendEmailVerification","url","REACT_APP_CONFIRMATION_EMAIL_REDIRECT","doPasswordUpdate","updatePassword","onAuthUserListener","next","fallback","onAuthStateChanged","authUser","competitor","uid","once","then","snapshot","dbUser","val","roles","objectSpread","emailVerified","providerData","db","ref","concat","competitors","anomaly","aid","anomalies","competition","semesteryear","name","competitions","team","tid","teams","report","rid","reports","app","initializeApp","serverValue","database","ServerValue","emailAuthProvider","EmailAuthProvider","storage","GoogleAuthProvider","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","JSON","parse","localStorage","getItem","inherits","createClass","key","value","_this2","listener","setItem","stringify","setState","removeItem","context","Provider","withAuthorization","condition","WithAuthorization","apply","arguments","_this$props","history","push","compose","withRouter","HomePage","users","on","off","id","_ref","type","onClick","NavigationAuth","NavLink","to","ROUTES","exact","activeClassName","SignOut","NavigationNonAuth","Navigation","Navigation_NavigationAuth","Navigation_NavigationNonAuth","INITIAL_STATE","error","PasswordForgetFormBase","onSubmit","event","catch","preventDefault","onChange","defineProperty","target","_this$state","isInvalid","placeholder","disabled","message","PasswordForgetLink","Link","username","passwordOne","passwordTwo","requestAdmin","requestInstructor","ERROR_CODE_ACCOUNT_EXISTS","ERROR_MSG_ACCOUNT_EXISTS","SignUpFormBase","requests","user","set","code","onChangeCheckbox","checked","_this$state2","SignUpLink","SignUpForm","SignUpPage","SignInFormBase","SignInGoogleBase","_this2$props","socialAuthUser","displayName","SignInFacebookBase","_this3","_this3$props","doSignInWithFacebook","additionalUserInfo","profile","SignInTwitterBase","_this4","_this4$props","doSignInWithTwitter","SignInForm","SignInGoogle","SignInFacebook","SignInTwitter","SignInPage","PasswordForget_PasswordForgetLink","SignUp_SignUpLink","AddCompetition","e","_assertThisInitialize","assertThisInitialized","year","semester","cid","city","numOfCompetitors","required","CompetitionDetails","editComp","bind","params","entries","map","_ref2","slicedToArray","charAt","toUpperCase","substring","CompetitionList","loading","competitionsObject","values","forEach","className","comp","Fragment","EditCompetition","AddTeam","captain","mem1","mem2","mem3","mem4","mem5","mem6","mem7","mem8","TeamList","teamsObject","console","log","teamsList","keys","EditTeam","AnomalyList","AddCompetitor","CompetitorDetails","CompetitorList","competitorsObject","competitorsList","EditCompetitor","ReportList","components_Navigation","Switch","Route","path","component","TeamDetails","AddAnomaly","EditAnomaly","AnomalyDetails","AddReport","EditReport","ReportDetails","ReactDOM","render","Firebase_context","BrowserRouter","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fa0b0758.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const HOME = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const ACCOUNT = '/account';\nexport const PASSWORD_FORGET = '/pw-forget';\n\n// Admin\nexport const ADMIN = '/admin';\nexport const ADMIN_DETAILS = '/admin/:uid';\n\n// Users\nexport const FACULTY = '/faculty';\nexport const FACULTY_DETAILS = '/faculty/:uid';\n\n// Competitors\nexport const COMPETITORS = '/competitors';\nexport const ADD_COMPETITOR = '/competitors/add';\nexport const EDIT_COMPETITOR = '/competitors/edit/:uid';\nexport const VIEW_COMPETITOR = '/competitors/:uid';\n\n// Team\nexport const TEAMS = '/team';\nexport const ADD_TEAM = '/team/add';\nexport const EDIT_TEAM = '/team/edit/:tid';\nexport const VIEW_TEAM = '/team/:tid';\nexport const CAPTAIN = '/team/:tid/:uid';\n\n// Competitions\nexport const COMPETITIONS = '/competition';\nexport const ADD_COMPETITION = '/competition/add';\nexport const EDIT_COMPETITION = '/competition/:semesteryear/:name/edit';\nexport const VIEW_COMPETITION = '/competition/:semesteryear/:name/';\n\n// Anomalies\nexport const ANOMALIES = '/anomaly';\nexport const ADD_ANOMALY = '/anomaly/add';\nexport const EDIT_ANOMALY = '/anomaly/edit/:aid';\nexport const VIEW_ANOMALY = '/anomaly/:aid';\n\n// Anomalies\nexport const REPORTS = '/report';\nexport const ADD_REPORT = '/report/add';\nexport const EDIT_REPORT = '/report/edit/:rid';\nexport const VIEW_REPORT = '/report/:rid';\n","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;\n","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n  <FirebaseContext.Consumer>{firebase => <Component {...props} firebase={firebase} />}</FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;\n","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/storage';\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n};\n\nclass Firebase {\n  constructor() {\n    app.initializeApp(config);\n\n    // *** Helper *** //\n\n    this.serverValue = app.database.ServerValue;\n    this.emailAuthProvider = app.auth.EmailAuthProvider;\n\n    // *** Firebase APIs *** //\n\n    this.auth = app.auth();\n    this.db = app.database();\n    this.storage = app.storage();\n\n    // *** Social Sign In Method Provider *** //\n\n    this.googleProvider = new app.auth.GoogleAuthProvider();\n  }\n\n  // *** Auth API *** //\n\n  doCreateUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n  doSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n  doSignInWithGoogle = () => this.auth.signInWithPopup(this.googleProvider);\n\n  doSignOut = () => this.auth.signOut();\n\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n  doSendEmailVerification = () =>\n    this.auth.currentUser.sendEmailVerification({\n      url: process.env.REACT_APP_CONFIRMATION_EMAIL_REDIRECT,\n    });\n\n  doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\n\n  // *** Merge Auth and DB User API *** //\n\n  onAuthUserListener = (next, fallback) =>\n    this.auth.onAuthStateChanged(authUser => {\n      if (authUser) {\n        this.competitor(authUser.uid)\n          .once('value')\n          .then(snapshot => {\n            const dbUser = snapshot.val();\n\n            // *** default empty roles ***  //\n            if (!dbUser.roles) {\n              dbUser.roles = [];\n            }\n\n            // *** merge auth and db user *** //\n            authUser = {\n              uid: authUser.uid,\n              email: authUser.email,\n              emailVerified: authUser.emailVerified,\n              providerData: authUser.providerData,\n              ...dbUser,\n            };\n\n            next(authUser);\n          });\n      } else {\n        fallback();\n      }\n    });\n\n  // *** Competitors API *** //\n\n  competitor = uid => this.db.ref(`competitors/${uid}`);\n\n  competitors = () => this.db.ref(`competitors`);\n\n  // *** Anomaly API *** //\n\n  anomaly = aid => this.db.ref(`anomalies/${aid}`);\n\n  anomalies = () => this.db.ref(`anomalies`);\n\n  // *** Competition API *** //\n\n  competition = (semesteryear, name) =>\n    this.db.ref(`competitions/${semesteryear}/${name}`);\n\n  competitions = () => this.db.ref(`competitions/`);\n\n  // *** Team API *** //\n\n  team = tid => this.db.ref(`teams/${tid}`);\n\n  teams = () => this.db.ref(`teams/`);\n\n  // *** Reports API *** //\n\n  report = rid => this.db.ref(`reports/${rid}`);\n\n  reports = () => this.db.ref(`reports/`);\n}\n\nexport default Firebase;\n","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };\n","import React from 'react';\n\n// *** HOC and Context *** //\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = (Component) => {\n  class WithAuthentication extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        authUser: JSON.parse(localStorage.getItem('authUser')),\n      };\n    }\n\n    componentDidMount() {\n      const { firebase } = this.props;\n      this.listener = firebase.onAuthUserListener(\n        (authUser) => {\n          localStorage.setItem('authUser', JSON.stringify(authUser));\n          this.setState({ authUser });\n        },\n        () => {\n          localStorage.removeItem('authUser');\n          this.setState({ authUser: null });\n        },\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      const { authUser } = this.state;\n      return (\n        <AuthUserContext.Provider value={authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n\n  return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;\n","import React from 'react';\n\n// *** Constants *** //\nimport * as ROUTES from '../../constants/routes';\n\n// *** Third-Party *** //\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\n// *** HOC and Context *** //\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthorization = (condition) => (Component) => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n      const { firebase, history } = this.props;\n      this.listener = firebase.onAuthUserListener(\n        (authUser) => {\n          if (!condition(authUser)) {\n            history.push(ROUTES.SIGN_IN);\n          }\n        },\n        () => history.push(ROUTES.SIGN_IN),\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {(authUser) =>\n            condition(authUser) ? <Component {...this.props} /> : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  return compose(\n    withRouter,\n    withFirebase,\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;\n","import React, { Component } from \"react\";\n\n// *** Third-Party *** //\nimport { compose } from \"recompose\";\n\n// *** Styles *** //\nimport \"../../styles/components/Home/Home.css\";\n\n// *** HOC and Context *** //\nimport { withAuthorization } from \"../Session\";\nimport { withFirebase } from \"../Firebase\";\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      users: null\n    };\n  }\n\n  componentDidMount() {\n    const { firebase } = this.props;\n    firebase.competitors().on(\"value\", snapshot => {\n      this.setState({\n        users: snapshot.val()\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.competitors().off();\n  }\n\n  render() {\n    return (\n      <main id=\"home\">\n        <p>\n          <span id=\"title\">\n            HAW<span id=\"ku\">KU</span>\n          </span>\n        </p>\n      </main>\n    );\n  }\n}\n\nconst condition = authUser => !!authUser;\n\nexport default compose(\n  withFirebase,\n  withAuthorization(condition)\n)(HomePage);\n","import React from 'react';\n\n// *** HOC and Context *** //\nimport { withFirebase } from '../Firebase';\n\nconst SignOutButton = ({ firebase }) => (\n  <button type=\"button\" onClick={firebase.doSignOut}>\n    Sign Out\n  </button>\n);\n\nexport default withFirebase(SignOutButton);\n","import React from \"react\";\n\n// *** Constants *** //\nimport * as ROUTES from \"../../constants/routes\";\n\n// *** Styles *** //\n\n// *** Third-Party *** //\nimport { NavLink as Link } from \"react-router-dom\";\n\n// *** HOC and Context *** //\nimport { AuthUserContext } from \"../Session\";\n\n// *** Components *** //\nimport SignOutButton from \"../SignOut\";\n\nconst Navigation = () => (\n  <AuthUserContext.Consumer>\n    {authUser =>\n      authUser ? <NavigationAuth authUser={authUser} /> : <NavigationNonAuth />\n    }\n  </AuthUserContext.Consumer>\n);\n\nconst NavigationAuth = ({ authUser }) => (\n  <header>\n    <div id=\"logo-title\">\n      <h1>\n        HAW<span id=\"air\">KU</span>\n      </h1>\n    </div>\n    <nav>\n      <ul>\n        <li>\n          <Link to={ROUTES.HOME} exact activeClassName=\"selected\">\n            Home\n          </Link>\n        </li>\n        <li>\n          <Link to={ROUTES.COMPETITIONS} exact activeClassName=\"selected\">\n            Competitions\n          </Link>\n        </li>\n        <li>\n          <Link to={ROUTES.TEAMS} exact activeClassName=\"selected\">\n            Teams\n          </Link>\n        </li>\n        <li>\n          <Link to={ROUTES.ANOMALIES} exact activeClassName=\"selected\">\n            Anomalies\n          </Link>\n        </li>\n        <li>\n          <Link to={ROUTES.COMPETITORS} exact activeClassName=\"selected\">\n            Competitors\n          </Link>\n        </li>\n        <li>\n          <Link to={ROUTES.REPORTS} exact activeClassName=\"selected\">\n            Reports\n          </Link>\n        </li>\n      </ul>\n      <SignOutButton />\n    </nav>\n  </header>\n);\n\nconst NavigationNonAuth = () => (\n  <header>\n    <h1>HAWKU</h1>\n    <nav>\n      <ul>\n        <li>\n          <Link to={ROUTES.SIGN_IN}>Sign In</Link>\n        </li>\n      </ul>\n    </nav>\n  </header>\n);\n\nexport default Navigation;\n","import React, { Component } from 'react';\n\n// *** Constants *** //\nimport * as ROUTES from '../../constants/routes';\n\n// *** Third-Party *** //\nimport { Link } from 'react-router-dom';\n\n// *** HOC and Context *** //\nimport { withFirebase } from '../Firebase';\n\nconst PasswordForgetPage = () => (\n  <div>\n    <h1>PasswordForget</h1>\n    <PasswordForgetForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  error: null,\n};\n\nclass PasswordForgetFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = (event) => {\n    const { email } = this.state;\n    const { firebase } = this.props;\n\n    firebase\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch((error) => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, error } = this.state;\n    const isInvalid = email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Reset My Password\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport default PasswordForgetPage;\n\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\n\nexport { PasswordForgetForm, PasswordForgetLink };\n","import React, { Component } from 'react';\n\n// *** Constants *** //\nimport * as ROUTES from '../../constants/routes';\n\n// *** Third-Party *** //\nimport { Link, withRouter } from 'react-router-dom';\n\n// *** HOC and Context *** //\nimport { withFirebase } from '../Firebase';\n\nconst SignUpPage = () => (\n  <div>\n    <h1>SignUp</h1>\n    <SignUpForm />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  username: '',\n  email: '',\n  passwordOne: '',\n  passwordTwo: '',\n  requestAdmin: false,\n  requestInstructor: false,\n  error: null,\n};\n\nconst ERROR_CODE_ACCOUNT_EXISTS = 'auth/email-already-in-use';\n\nconst ERROR_MSG_ACCOUNT_EXISTS = `\n  An account with this E-Mail address already exists.\n  Try to login with this account instead. If you think the\n  account is already used from one of the social logins, try\n  to sign in with one of them. Afterward, associate your accounts\n  on your personal account page.\n`;\n\nclass SignUpFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const {\n      username,\n      email,\n      passwordOne,\n      requestAdmin,\n      requestInstructor,\n    } = this.state;\n    const { firebase, history } = this.props;\n    const requests = [];\n    if (requestAdmin) {\n      requests.push('admin');\n    }\n    if (requestInstructor) {\n      requests.push('instructor');\n    }\n\n    firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        // Create a user in your Firebase real time database\n        return firebase.competitor(authUser.user.uid).set({\n          username,\n          email,\n          requests,\n        });\n      })\n      .then(() => {\n        return firebase.doSendEmailVerification();\n      })\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onChangeCheckbox = event => {\n    this.setState({ [event.target.name]: event.target.checked });\n  };\n\n  render() {\n    const {\n      username,\n      email,\n      passwordOne,\n      passwordTwo,\n      error,\n      requestInstructor,\n      requestAdmin,\n    } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === '' ||\n      email === '' ||\n      username === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"username\"\n          value={username}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Full Name\"\n        />\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"passwordOne\"\n          value={passwordOne}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <input\n          name=\"passwordTwo\"\n          value={passwordTwo}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n        />\n        <label>\n          Request Admin:\n          <input\n            name=\"requestAdmin\"\n            type=\"checkbox\"\n            checked={requestAdmin}\n            onChange={this.onChangeCheckbox}\n          />\n        </label>\n        <label>\n          Request Instructor:\n          <input\n            name=\"requestInstructor\"\n            type=\"checkbox\"\n            checked={requestInstructor}\n            onChange={this.onChangeCheckbox}\n          />\n        </label>\n        <button disabled={isInvalid} type=\"submit\">\n          Sign Up\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignUpLink = () => (\n  <p>\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\n  </p>\n);\n\nconst SignUpForm = withRouter(withFirebase(SignUpFormBase));\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };\n","import React, { Component } from 'react';\n\n// *** Constants *** //\nimport * as ROUTES from '../../constants/routes';\n\n// *** Third-Party *** //\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\n// *** HOC and Context *** //\nimport { withFirebase } from '../Firebase';\n\n// *** Components *** //\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { SignUpLink } from '../SignUp';\n\nconst SignInPage = () => (\n  <div>\n    <h1>SignIn</h1>\n    <SignInForm />\n    <SignInGoogle />\n    <SignInFacebook />\n    <SignInTwitter />\n    <PasswordForgetLink />\n    <SignUpLink />\n  </div>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n};\n\nconst ERROR_CODE_ACCOUNT_EXISTS =\n  'auth/account-exists-with-different-credential';\n\nconst ERROR_MSG_ACCOUNT_EXISTS = `\n  An account with an E-Mail address to\n  this social account already exists. Try to login from\n  this account instead and associate your social accounts on\n  your personal account page.\n`;\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email, password } = this.state;\n    const { firebase, history } = this.props;\n\n    firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n\n    const isInvalid = password === '' || email === '';\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <input\n          name=\"password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        <button disabled={isInvalid} type=\"submit\">\n          Sign In\n        </button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nclass SignInGoogleBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = event => {\n    const { firebase, history } = this.props;\n    firebase\n      .doSignInWithGoogle()\n      .then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        return firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.user.displayName,\n          email: socialAuthUser.user.email,\n          roles: [],\n        });\n      })\n      .then(() => {\n        this.setState({ error: null });\n        history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <button type=\"submit\">Sign In with Google</button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nclass SignInFacebookBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = event => {\n    const { firebase, history } = this.props;\n    firebase\n      .doSignInWithFacebook()\n      .then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        return firebase.competitor(socialAuthUser.competitor.uid).set({\n          username: socialAuthUser.additionalUserInfo.profile.name,\n          email: socialAuthUser.additionalUserInfo.profile.email,\n          roles: [],\n        });\n      })\n      .then(() => {\n        this.setState({ error: null });\n        history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <button type=\"submit\">Sign In with Facebook</button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nclass SignInTwitterBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = event => {\n    const { firebase, history } = this.props;\n    firebase\n      .doSignInWithTwitter()\n      .then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        return firebase.competitor(socialAuthUser.competitor.uid).set({\n          username: socialAuthUser.additionalUserInfo.profile.name,\n          email: socialAuthUser.additionalUserInfo.profile.email,\n          roles: [],\n        });\n      })\n      .then(() => {\n        this.setState({ error: null });\n        history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <button type=\"submit\">Sign In with Twitter</button>\n\n        {error && <p>{error.message}</p>}\n      </form>\n    );\n  }\n}\n\nconst SignInForm = compose(\n  withRouter,\n  withFirebase,\n)(SignInFormBase);\n\nconst SignInGoogle = compose(\n  withRouter,\n  withFirebase,\n)(SignInGoogleBase);\n\nconst SignInFacebook = compose(\n  withRouter,\n  withFirebase,\n)(SignInFacebookBase);\n\nconst SignInTwitter = compose(\n  withRouter,\n  withFirebase,\n)(SignInTwitterBase);\n\nexport default SignInPage;\n\nexport { SignInForm, SignInGoogle, SignInFacebook, SignInTwitter };\n","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\n\nclass AddCompetition extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      city: '',\n      state: '',\n      numOfCompetitors: 0,\n      year: 0,\n      semester: 'Spring',\n    };\n  }\n\n  onSubmit = e => {\n    const { state, props } = this;\n    const { firebase } = props;\n    const { name, year, semester } = state;\n    this.setState({ cid: `${name}${semester}${year}` });\n    e.preventDefault();\n    firebase.competition(semester, year, name).set(state);\n\n    this.setState({\n      name: '',\n      city: '',\n      state: '',\n      numOfCompetitors: 0,\n      year: 0,\n      semester: 'Spring',\n    });\n\n    this.props.history.push('/competition');\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  render() {\n    const { onSubmit, onChange } = this;\n    const { name, city, state, numOfCompetitors, year, semester } = this.state;\n    return (\n      <main id=\"add_competition\">\n        <h1>Add Competition</h1>\n        <article>\n          <form onSubmit={onSubmit}>\n            <input\n              type=\"text\"\n              onChange={onChange}\n              value={name}\n              name=\"name\"\n              placeholder=\"Competition Name\"\n              required\n            />\n            <input\n              type=\"text\"\n              onChange={onChange}\n              value={city}\n              name=\"city\"\n              placeholder=\"City\"\n              required\n            />\n            <input\n              type=\"text\"\n              onChange={onChange}\n              value={state}\n              name=\"state\"\n              placeholder=\"State\"\n              required\n            />\n            <input\n              type=\"number\"\n              onChange={onChange}\n              value={numOfCompetitors}\n              name=\"numOfCompetitors\"\n              placeholder=\"Number of Competitors\"\n              required\n            />\n            <select\n              name=\"semester\"\n              onChange={onChange}\n              required\n              value={semester}\n            >\n              <option value=\"Spring\">Spring</option>\n              <option value=\"Fall\">Fall</option>\n            </select>\n            <input\n              type=\"number\"\n              onChange={onChange}\n              value={year}\n              name=\"year\"\n              placeholder=\"Year\"\n              required\n            />\n            <input type=\"submit\" value=\"Add Competition\" />\n            <input type=\"reset\" value=\"Reset\" />\n          </form>\n        </article>\n      </main>\n    );\n  }\n}\n\nexport default withFirebase(AddCompetition);\n","import React, { Component } from \"react\";\nimport { withFirebase } from \"../Firebase\";\n\nclass CompetitionDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      competition: null\n    };\n    this.editComp = this.editComp.bind(this);\n  }\n\n  componentWillMount() {\n    const { firebase } = this.props;\n    firebase\n      .competition(\n        this.props.match.params.semesteryear,\n        this.props.match.params.name\n      )\n      .on(\"value\", snapshot => {\n        this.setState({\n          competition: snapshot.val()\n        });\n      });\n  }\n\n  editComp = () => {\n    const { history, match } = this.props;\n    history.push(`${match.url}/edit`);\n  };\n\n  render() {\n    const { competition } = this.state;\n    return (\n      <main id=\"competition_details\">\n        <h1>Competition Details</h1>\n        <article>\n          <input\n            type=\"button\"\n            value=\"Click here to edit the competition\"\n            onClick={this.editComp}\n          />\n          {competition &&\n            Object.entries(competition).map(([key, value]) => (\n              <p key={key}>\n                {key.charAt(0).toUpperCase() + key.substring(1)}: {value}\n              </p>\n            ))}\n        </article>\n      </main>\n    );\n  }\n}\n\nexport default withFirebase(CompetitionDetails);\n","import React, { Component } from 'react';\nimport * as ROUTES from '../../constants/routes';\nimport { Link } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\n\nclass CompetitionList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      competitions: [],\n      loading: true,\n    };\n  }\n\n  componentWillMount() {\n    const { firebase } = this.props;\n\n    firebase.competitions().on('value', snapshot => {\n      const competitionsObject = snapshot.val();\n      if (competitionsObject !== null) {\n        Object.values(competitionsObject).forEach(value => {\n          Object.entries(value).forEach(([key, value]) =>\n            this.state.competitions.push({ [key]: value }),\n          );\n        });\n        this.setState({ loading: false });\n      }\n    });\n  }\n\n  render() {\n    const { loading, competitions } = this.state;\n    return (\n      <main id=\"competition_list\">\n        <h1>Competitions</h1>\n        <Link to={ROUTES.ADD_COMPETITION} className=\"btn\">\n          Add Competition\n        </Link>\n        {loading && <div className=\"loading\">Loading...</div>}\n        {\n          <article id=\"competitions\">\n            {Object.values(\n              competitions.map(competition =>\n                Object.values(competition).map(comp => (\n                  <React.Fragment\n                    key={`${comp.name}${comp.semester}${comp.year}`}\n                  >\n                    <p>\n                      <Link\n                        to={`/competition/${comp.semester}${comp.year}/${\n                          comp.name\n                        }`}\n                      >\n                        {comp.semester}\n                        {comp.year} - {comp.name}\n                      </Link>\n                    </p>\n                  </React.Fragment>\n                )),\n              ),\n            )}\n          </article>\n        }\n      </main>\n    );\n  }\n}\n\nexport default withFirebase(CompetitionList);\n","import React, { Component } from \"react\";\nimport { withFirebase } from \"../Firebase\";\n\nclass EditCompetition extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      competition: null,\n      name: \"\",\n      city: \"\",\n      state: \"\",\n      numOfCompetitors: 0,\n      year: 2019,\n      semester: \"Spring\"\n    };\n  }\n\n  componentDidMount() {\n    const { firebase } = this.props;\n    firebase\n      .competition(\n        this.props.match.params.semesteryear,\n        this.props.match.params.name\n      )\n      .on(\"value\", snapshot => {\n        /* eslint-disable array-callback-return */\n        Object.entries(snapshot.val()).map(([key, value]) => {\n          this.setState({ [key]: value });\n        });\n      });\n  }\n\n  onSubmit = e => {\n    const { state, props } = this;\n    const { firebase } = props;\n    const { name, year, semester } = state;\n    e.preventDefault();\n    const semesteryear = `${semester}${year}`;\n    firebase.competition(semesteryear, name).set(state);\n\n    this.setState({\n      name: \"\",\n      city: \"\",\n      state: \"\",\n      numOfCompetitors: 0,\n      year: 0,\n      semester: \"Spring\"\n    });\n\n    this.props.history.push(\"/competition\");\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  render() {\n    const { onSubmit, onChange } = this;\n    const { name, city, state, numOfCompetitors, year, semester } = this.state;\n    return (\n      <main id=\"add_competition\">\n        <h1>Add Competition</h1>\n        <article>\n          <form onSubmit={onSubmit}>\n            <input\n              type=\"text\"\n              onChange={onChange}\n              value={name}\n              name=\"name\"\n              placeholder=\"Competition Name\"\n              required\n            />\n            <input\n              type=\"text\"\n              onChange={onChange}\n              value={city}\n              name=\"city\"\n              placeholder=\"City\"\n              required\n            />\n            <input\n              type=\"text\"\n              onChange={onChange}\n              value={state}\n              name=\"state\"\n              placeholder=\"State\"\n              required\n            />\n            <input\n              type=\"number\"\n              onChange={onChange}\n              value={numOfCompetitors}\n              name=\"numOfCompetitors\"\n              placeholder=\"Number of Competitors\"\n              required\n            />\n            <select\n              name=\"semester\"\n              onChange={onChange}\n              required\n              value={semester}\n            >\n              <option value=\"Spring\">Spring</option>\n              <option value=\"Fall\">Fall</option>\n            </select>\n            <input\n              type=\"number\"\n              onChange={onChange}\n              value={year}\n              name=\"year\"\n              placeholder=\"Year\"\n              required\n            />\n            <input type=\"submit\" value=\"Add Competition\" />\n            <input type=\"reset\" value=\"Reset\" />\n          </form>\n        </article>\n      </main>\n    );\n  }\n}\n\nexport default withFirebase(EditCompetition);\n","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\n\nclass AddTeam extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      captain: '',\n      mem1: '',\n      mem2: '',\n      mem3: '',\n      mem4: '',\n      mem5: '',\n      mem6: '',\n      mem7: '',\n      mem8: '',\n    };\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    const { state, props } = this;\n    const { firebase } = props;\n    const { name } = state;\n\n    e.preventDefault();\n    const tid = `${name}`;\n    firebase.team(`${tid}`).set(state);\n    this.setState({\n      name: '',\n      captain: '',\n      mem1: '',\n      mem2: '',\n      mem3: '',\n      mem4: '',\n      mem5: '',\n      mem6: '',\n      mem7: '',\n      mem8: '',\n    });\n  };\n\n  render() {\n    const {\n      name,\n      captain,\n      mem1,\n      mem2,\n      mem3,\n      mem4,\n      mem5,\n      mem6,\n      mem7,\n      mem8,\n    } = this.state;\n    const { onSubmit, onChange } = this;\n    return (\n      <main id=\"add_test\">\n        <h2>Add a Team!</h2>\n        <article>\n          <form onSubmit={onSubmit}>\n            <input\n              type=\"text\"\n              onChange={onChange}\n              value={name}\n              name=\"name\"\n              placeholder=\"Team Name\"\n            />\n            <input\n              type=\"text\"\n              onChange={onChange}\n              value={captain}\n              name=\"captain\"\n              placeholder=\"Team Captain\"\n            />\n            <input\n              type=\"text\"\n              onChange={onChange}\n              value={mem1}\n              name=\"mem1\"\n              placeholder=\"Competitor 1\"\n            />\n            <input\n              type=\"text\"\n              onChange={onChange}\n              value={mem2}\n              name=\"mem2\"\n              placeholder=\"Competitor 2\"\n            />\n            <input\n              type=\"text\"\n              onChange={onChange}\n              value={mem3}\n              name=\"mem3\"\n              placeholder=\"Competitor 3\"\n            />\n            <input\n              type=\"text\"\n              onChange={onChange}\n              value={mem4}\n              name=\"mem4\"\n              placeholder=\"Competitor 4\"\n            />\n            <input\n              type=\"text\"\n              onChange={onChange}\n              value={mem5}\n              name=\"mem5\"\n              placeholder=\"Competitor 5\"\n            />\n            <input\n              type=\"text\"\n              onChange={onChange}\n              value={mem6}\n              name=\"mem6\"\n              placeholder=\"Competitor 6\"\n            />\n            <input\n              type=\"text\"\n              onChange={onChange}\n              value={mem7}\n              name=\"mem7\"\n              placeholder=\"Competitor 7\"\n            />\n            <input\n              type=\"text\"\n              onChange={onChange}\n              value={mem8}\n              name=\"mem8\"\n              placeholder=\"Competitor 8\"\n            />\n            <input type=\"submit\" value=\"Add Team\" />\n            <input type=\"reset\" value=\"Reset\" />\n          </form>\n        </article>\n      </main>\n    );\n  }\n}\n\nexport default withFirebase(AddTeam);\n","import React from 'react';\n\nconst EditCompetition = () => <h1>Edit Competition</h1>;\n\nexport default EditCompetition;\n","import React, { Component } from 'react';\nimport * as ROUTES from '../../constants/routes';\nimport { Link } from 'react-router-dom';\nimport { withFirebase } from '../Firebase';\n\nclass TeamList extends Component {\n  state = {\n    teams: null,\n    loading: true,\n  };\n\n  componentWillMount() {\n    const { firebase } = this.props;\n    this.setState({ loading: true });\n    firebase.teams().on('value', snapshot => {\n      const teamsObject = snapshot.val();\n      console.log(teamsObject);\n      if (teamsObject === null) {\n        return;\n      } else {\n        const teamsList = Object.keys(teamsObject).map(key => ({\n          ...teamsObject[key],\n          uid: key,\n        }));\n\n        this.setState({\n          teams: teamsList,\n        });\n\n        this.setState({ loading: false });\n      }\n    });\n  }\n\n  render() {\n    const { teams, loading } = this.state;\n    return (\n      <main id=\"team_list\">\n        <Link to={ROUTES.ADD_TEAM}>Add Team</Link>\n        {loading && <div>Loading...</div>}\n        {teams && (\n          <ul>\n            {teams.map(team => (\n              <Link to={`${ROUTES.TEAMS}/edit/${team.name}`} key={team.name}>\n                <li>{team.name}</li>\n              </Link>\n            ))}\n          </ul>\n        )}\n      </main>\n    );\n  }\n}\n\nexport default withFirebase(TeamList);\n","import React from 'react';\n\nconst EditTeam = () => <h1>Edit Team</h1>;\n\nexport default EditTeam;\n","import React from 'react';\n\nconst EditCompetition = () => <h1>Edit Competition</h1>;\n\nexport default EditCompetition;\n","import React from 'react';\n\nconst EditCompetition = () => <h1>Edit Competition</h1>;\n\nexport default EditCompetition;\n","import React from 'react';\n\nconst AnomalyList = () => (\n  <main id=\"anomaly_list\">\n    <h1>Anomalies</h1>\n  </main>\n);\n\nexport default AnomalyList;\n","import React from 'react';\n\nconst EditCompetition = () => <h1>Edit Competition</h1>;\n\nexport default EditCompetition;\n","import React from \"react\";\n\nconst AddCompetitor = () => <h1>Add Competitor</h1>;\n\nexport default AddCompetitor;\n","import React from \"react\";\n\nconst CompetitorDetails = () => <h1>Competitor Details</h1>;\n\nexport default CompetitorDetails;\n","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nimport { Link } from 'react-router-dom';\n\nclass CompetitorList extends Component {\n  state = {\n    competitors: null,\n    loading: true,\n  };\n\n  componentWillMount() {\n    const { firebase } = this.props;\n    this.setState({ loading: true });\n    firebase.competitors().on('value', snapshot => {\n      const competitorsObject = snapshot.val();\n      if (competitorsObject === null) {\n        return;\n      } else {\n        const competitorsList = Object.keys(competitorsObject).map(key => ({\n          ...competitorsObject[key],\n          uid: key,\n        }));\n\n        this.setState({\n          competitors: competitorsList,\n        });\n\n        this.setState({ loading: false });\n      }\n    });\n  }\n\n  render() {\n    const { competitors, loading } = this.state;\n    return (\n      <main id=\"competitor_list\">\n        <h1>Competitors</h1>\n        {loading && <div>Loading...</div>}\n        {competitors && (\n          <ul>\n            {competitors.map(competitor => (\n              <Link\n                to={`${ROUTES.COMPETITORS}/${competitor.uid}`}\n                key={competitor.uid}\n              >\n                <li>{competitor.username}</li>\n              </Link>\n            ))}\n          </ul>\n        )}\n      </main>\n    );\n  }\n}\n\nexport default withFirebase(CompetitorList);\n","import React from \"react\";\n\nconst EditCompetitor = () => <h1>Edit Competitor</h1>;\n\nexport default EditCompetitor;\n","import React from 'react';\n\nconst EditCompetition = () => <h1>Edit Competition</h1>;\n\nexport default EditCompetition;\n","import React from 'react';\n\nconst EditCompetition = () => <h1>Edit Competition</h1>;\n\nexport default EditCompetition;\n","import React from 'react';\n\nconst ReportList = () => (\n  <main id=\"report_list\">\n    <h1>Reports</h1>\n  </main>\n);\n\nexport default ReportList;\n","import React from 'react';\n\nconst EditCompetition = () => <h1>Edit Competition</h1>;\n\nexport default EditCompetition;\n","import React from 'react';\n\n// *** Constants *** //\nimport * as ROUTES from '../../constants/routes';\n\n// *** Third-Party *** //\nimport { Route, Switch } from 'react-router-dom';\n\n// *** Styles *** //\nimport '../../styles/base/App.css';\n\n// *** HOC and Context *** //\nimport { withAuthentication } from '../Session';\n\n// *** Components *** //\nimport HomePage from '../Home';\nimport Navigation from '../Navigation';\nimport SignInPage from '../SignIn';\nimport SignUpPage from '../SignUp';\nimport {\n  CompetitionList,\n  AddCompetition,\n  EditCompetition,\n  CompetitionDetails,\n} from '../Competitions';\nimport { TeamList, AddTeam, EditTeam, TeamDetails } from '../Teams';\nimport {\n  AnomalyList,\n  AddAnomaly,\n  EditAnomaly,\n  AnomalyDetails,\n} from '../Anomalies';\nimport {\n  CompetitorList,\n  AddCompetitor,\n  EditCompetitor,\n  CompetitorDetails,\n} from '../Competitors';\nimport { ReportList, AddReport, EditReport, ReportDetails } from '../Reports';\n\nconst App = () => (\n  <React.Fragment>\n    <Navigation />\n    <Switch>\n      <Route exact path={ROUTES.HOME} component={HomePage} />\n      <Route exact path={ROUTES.SIGN_IN} component={SignInPage} />\n      <Route exact path={ROUTES.SIGN_UP} component={SignUpPage} />\n      {/* Competitions */}\n      <Route exact path={ROUTES.COMPETITIONS} component={CompetitionList} />\n      <Route exact path={ROUTES.ADD_COMPETITION} component={AddCompetition} />\n      <Route exact path={ROUTES.EDIT_COMPETITION} component={EditCompetition} />\n      <Route\n        exact\n        path={ROUTES.VIEW_COMPETITION}\n        component={CompetitionDetails}\n      />\n      {/* Teams */}\n      <Route exact path={ROUTES.TEAMS} component={TeamList} />\n      <Route exact path={ROUTES.ADD_TEAM} component={AddTeam} />\n      <Route exact path={ROUTES.EDIT_TEAM} component={EditTeam} />\n      <Route exact path={ROUTES.VIEW_TEAM} component={TeamDetails} />\n      {/* Anomalies */}\n      <Route exact path={ROUTES.ANOMALIES} component={AnomalyList} />\n      <Route exact path={ROUTES.ADD_ANOMALY} component={AddAnomaly} />\n      <Route exact path={ROUTES.EDIT_ANOMALY} component={EditAnomaly} />\n      <Route exact path={ROUTES.VIEW_ANOMALY} component={AnomalyDetails} />\n      {/* Competitors */}\n      <Route exact path={ROUTES.COMPETITORS} component={CompetitorList} />\n      <Route exact path={ROUTES.ADD_COMPETITOR} component={AddCompetitor} />\n      <Route exact path={ROUTES.EDIT_COMPETITOR} component={EditCompetitor} />\n      <Route\n        exact\n        path={ROUTES.VIEW_COMPETITOR}\n        component={CompetitorDetails}\n      />\n\n      {/* Reports */}\n      <Route exact path={ROUTES.REPORTS} component={ReportList} />\n      <Route exact path={ROUTES.ADD_REPORT} component={AddReport} />\n      <Route exact path={ROUTES.EDIT_REPORT} component={EditReport} />\n      <Route exact path={ROUTES.VIEW_REPORT} component={ReportDetails} />\n    </Switch>\n  </React.Fragment>\n);\n\nexport default withAuthentication(App);\n","import React from 'react';\nimport * as serviceWorker from './serviceWorker';\n\n// *** Third-Party *** //\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n// *** Styles *** //\nimport './styles/base/index.css';\nimport './styles/base/settings.css';\nimport './styles/base/reset.css';\n\n// *** Components *** //\nimport App from './components/App';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <Router>\n      <App />\n    </Router>\n  </FirebaseContext.Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}